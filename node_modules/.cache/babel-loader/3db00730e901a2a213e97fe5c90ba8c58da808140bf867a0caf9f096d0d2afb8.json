{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { collection, addDoc, updateDoc, deleteDoc, doc, onSnapshot, query, orderBy, where, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nexport const useEvents = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const q = query(collection(db, 'events'), orderBy('createdAt', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const eventsData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setEvents(eventsData);\n      setLoading(false);\n    }, err => {\n      setError(err);\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const createEvent = async eventData => {\n    try {\n      const docRef = await addDoc(collection(db, 'events'), {\n        ...eventData,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp()\n      });\n      return docRef.id;\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  };\n  const updateEvent = async (eventId, eventData) => {\n    try {\n      await updateDoc(doc(db, 'events', eventId), {\n        ...eventData,\n        updatedAt: serverTimestamp()\n      });\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  };\n  const deleteEvent = async eventId => {\n    try {\n      await deleteDoc(doc(db, 'events', eventId));\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  };\n  const joinEvent = async (eventId, userId, userName) => {\n    try {\n      const event = events.find(e => e.id === eventId);\n      if (!event) throw new Error('Event not found');\n      const updatedAttendees = [...(event.attendees || []), {\n        userId,\n        userName,\n        joinedAt: new Date()\n      }];\n      await updateDoc(doc(db, 'events', eventId), {\n        attendees: updatedAttendees,\n        updatedAt: serverTimestamp()\n      });\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  };\n  const leaveEvent = async (eventId, userId) => {\n    try {\n      const event = events.find(e => e.id === eventId);\n      if (!event) throw new Error('Event not found');\n      const updatedAttendees = (event.attendees || []).filter(attendee => attendee.userId !== userId);\n      await updateDoc(doc(db, 'events', eventId), {\n        attendees: updatedAttendees,\n        updatedAt: serverTimestamp()\n      });\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  };\n  return {\n    events,\n    loading,\n    error,\n    createEvent,\n    updateEvent,\n    deleteEvent,\n    joinEvent,\n    leaveEvent\n  };\n};\n_s(useEvents, \"TlsuwTtpJOZ2tMfhB3uipTGA4lI=\");","map":{"version":3,"names":["useState","useEffect","collection","addDoc","updateDoc","deleteDoc","doc","onSnapshot","query","orderBy","where","serverTimestamp","db","useEvents","_s","events","setEvents","loading","setLoading","error","setError","q","unsubscribe","snapshot","eventsData","docs","map","id","data","err","createEvent","eventData","docRef","createdAt","updatedAt","updateEvent","eventId","deleteEvent","joinEvent","userId","userName","event","find","e","Error","updatedAttendees","attendees","joinedAt","Date","leaveEvent","filter","attendee"],"sources":["C:/Users/1005598/OneDrive - Loudoun County Public Schools/Documents/Self-Projects/Hackathon/src/hooks/useEvents.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { \r\n  collection, \r\n  addDoc, \r\n  updateDoc, \r\n  deleteDoc, \r\n  doc, \r\n  onSnapshot, \r\n  query, \r\n  orderBy, \r\n  where,\r\n  serverTimestamp \r\n} from 'firebase/firestore';\r\nimport { db } from '../firebase/config';\r\n\r\nexport const useEvents = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(db, 'events'),\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, \r\n      (snapshot) => {\r\n        const eventsData = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setEvents(eventsData);\r\n        setLoading(false);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    );\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const createEvent = async (eventData) => {\r\n    try {\r\n      const docRef = await addDoc(collection(db, 'events'), {\r\n        ...eventData,\r\n        createdAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp()\r\n      });\r\n      return docRef.id;\r\n    } catch (err) {\r\n      setError(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const updateEvent = async (eventId, eventData) => {\r\n    try {\r\n      await updateDoc(doc(db, 'events', eventId), {\r\n        ...eventData,\r\n        updatedAt: serverTimestamp()\r\n      });\r\n    } catch (err) {\r\n      setError(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const deleteEvent = async (eventId) => {\r\n    try {\r\n      await deleteDoc(doc(db, 'events', eventId));\r\n    } catch (err) {\r\n      setError(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const joinEvent = async (eventId, userId, userName) => {\r\n    try {\r\n      const event = events.find(e => e.id === eventId);\r\n      if (!event) throw new Error('Event not found');\r\n\r\n      const updatedAttendees = [...(event.attendees || []), { userId, userName, joinedAt: new Date() }];\r\n      \r\n      await updateDoc(doc(db, 'events', eventId), {\r\n        attendees: updatedAttendees,\r\n        updatedAt: serverTimestamp()\r\n      });\r\n    } catch (err) {\r\n      setError(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const leaveEvent = async (eventId, userId) => {\r\n    try {\r\n      const event = events.find(e => e.id === eventId);\r\n      if (!event) throw new Error('Event not found');\r\n\r\n      const updatedAttendees = (event.attendees || []).filter(attendee => attendee.userId !== userId);\r\n      \r\n      await updateDoc(doc(db, 'events', eventId), {\r\n        attendees: updatedAttendees,\r\n        updatedAt: serverTimestamp()\r\n      });\r\n    } catch (err) {\r\n      setError(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return {\r\n    events,\r\n    loading,\r\n    error,\r\n    createEvent,\r\n    updateEvent,\r\n    deleteEvent,\r\n    joinEvent,\r\n    leaveEvent\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}