{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1005598\\\\OneDrive - Loudoun County Public Schools\\\\Documents\\\\Self-Projects\\\\Hackathon\\\\src\\\\context\\\\ReportContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportContext = /*#__PURE__*/createContext();\n\n// Verification thresholds\nconst VERIFICATION_THRESHOLDS = {\n  safe: 2,\n  // Need 2 reports to verify safe status\n  caution: 3,\n  // Need 3 reports to verify caution status\n  warning: 2,\n  // Need 2 reports to verify warning status\n  unsafe: 1 // Need only 1 report to verify unsafe status (safety first)\n};\n\n// Time window for report verification (in hours)\nconst VERIFICATION_WINDOW = 24;\nconst initialState = {\n  reports: [],\n  verifiedStatuses: {\n    \"Lake Anna\": \"warning\",\n    \"Occoquan Reservoir\": \"caution\",\n    \"Chickahominy River\": \"caution\",\n    \"James River\": \"safe\",\n    \"Potomac River\": \"safe\",\n    \"Shenandoah River\": \"safe\",\n    \"Smith Mountain Lake\": \"caution\",\n    \"Kerr Reservoir\": \"safe\",\n    \"Claytor Lake\": \"safe\",\n    \"Lake Gaston\": \"warning\"\n  },\n  pendingReports: [],\n  // Reports waiting for verification\n  verificationQueue: {} // Location-based report queues\n};\nconst reportReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_REPORT':\n      const newReport = {\n        ...action.payload,\n        id: Date.now(),\n        timestamp: new Date().toISOString(),\n        verified: false\n      };\n\n      // Add to pending reports\n      const updatedPendingReports = [...state.pendingReports, newReport];\n\n      // Update verification queue for this location\n      const location = newReport.location;\n      const locationReports = state.verificationQueue[location] || [];\n      const updatedLocationReports = [...locationReports, newReport];\n\n      // Check if we have enough reports to verify\n      const threshold = VERIFICATION_THRESHOLDS[newReport.status] || 3;\n      const recentReports = updatedLocationReports.filter(report => {\n        const reportTime = new Date(report.timestamp);\n        const now = new Date();\n        const hoursDiff = (now - reportTime) / (1000 * 60 * 60);\n        return hoursDiff <= VERIFICATION_WINDOW;\n      });\n      const statusCounts = recentReports.reduce((acc, report) => {\n        acc[report.status] = (acc[report.status] || 0) + 1;\n        return acc;\n      }, {});\n\n      // Find the status with the most reports\n      const verifiedStatus = Object.keys(statusCounts).reduce((a, b) => statusCounts[a] > statusCounts[b] ? a : b);\n\n      // Check if we have enough reports to verify\n      const shouldVerify = statusCounts[verifiedStatus] >= threshold;\n      return {\n        ...state,\n        reports: [newReport, ...state.reports.slice(0, 9)],\n        // Keep 10 most recent\n        pendingReports: updatedPendingReports,\n        verificationQueue: {\n          ...state.verificationQueue,\n          [location]: updatedLocationReports\n        },\n        verifiedStatuses: shouldVerify ? {\n          ...state.verifiedStatuses,\n          [location]: verifiedStatus\n        } : state.verifiedStatuses\n      };\n    case 'CLEAR_OLD_REPORTS':\n      const cutoffTime = new Date(Date.now() - VERIFICATION_WINDOW * 60 * 60 * 1000);\n      const filteredPendingReports = state.pendingReports.filter(report => new Date(report.timestamp) > cutoffTime);\n      const filteredVerificationQueue = Object.keys(state.verificationQueue).reduce((acc, location) => {\n        acc[location] = state.verificationQueue[location].filter(report => new Date(report.timestamp) > cutoffTime);\n        return acc;\n      }, {});\n      return {\n        ...state,\n        pendingReports: filteredPendingReports,\n        verificationQueue: filteredVerificationQueue\n      };\n    default:\n      return state;\n  }\n};\nexport const ReportProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reportReducer, initialState);\n\n  // Clean up old reports every hour\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch({\n        type: 'CLEAR_OLD_REPORTS'\n      });\n    }, 60 * 60 * 1000); // 1 hour\n\n    return () => clearInterval(interval);\n  }, []);\n  const addReport = reportData => {\n    dispatch({\n      type: 'ADD_REPORT',\n      payload: reportData\n    });\n  };\n  const getVerificationStatus = location => {\n    const locationReports = state.verificationQueue[location] || [];\n    const recentReports = locationReports.filter(report => {\n      const reportTime = new Date(report.timestamp);\n      const now = new Date();\n      const hoursDiff = (now - reportTime) / (1000 * 60 * 60);\n      return hoursDiff <= VERIFICATION_WINDOW;\n    });\n    const statusCounts = recentReports.reduce((acc, report) => {\n      acc[report.status] = (acc[report.status] || 0) + 1;\n      return acc;\n    }, {});\n    const totalReports = Object.values(statusCounts).reduce((sum, count) => sum + count, 0);\n    const mostCommonStatus = Object.keys(statusCounts).reduce((a, b) => statusCounts[a] > statusCounts[b] ? a : b, 'safe');\n    const threshold = VERIFICATION_THRESHOLDS[mostCommonStatus] || 3;\n    const isVerified = statusCounts[mostCommonStatus] >= threshold;\n    return {\n      totalReports,\n      neededReports: threshold,\n      mostCommonStatus,\n      isVerified,\n      statusCounts\n    };\n  };\n  const value = {\n    ...state,\n    addReport,\n    getVerificationStatus,\n    VERIFICATION_THRESHOLDS\n  };\n  return /*#__PURE__*/_jsxDEV(ReportContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ReportProvider;\nexport const useReports = () => {\n  _s2();\n  const context = useContext(ReportContext);\n  if (!context) {\n    throw new Error('useReports must be used within a ReportProvider');\n  }\n  return context;\n};\n_s2(useReports, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ReportProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","ReportContext","VERIFICATION_THRESHOLDS","safe","caution","warning","unsafe","VERIFICATION_WINDOW","initialState","reports","verifiedStatuses","pendingReports","verificationQueue","reportReducer","state","action","type","newReport","payload","id","Date","now","timestamp","toISOString","verified","updatedPendingReports","location","locationReports","updatedLocationReports","threshold","status","recentReports","filter","report","reportTime","hoursDiff","statusCounts","reduce","acc","verifiedStatus","Object","keys","a","b","shouldVerify","slice","cutoffTime","filteredPendingReports","filteredVerificationQueue","ReportProvider","children","_s","dispatch","interval","setInterval","clearInterval","addReport","reportData","getVerificationStatus","totalReports","values","sum","count","mostCommonStatus","isVerified","neededReports","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useReports","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/1005598/OneDrive - Loudoun County Public Schools/Documents/Self-Projects/Hackathon/src/context/ReportContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst ReportContext = createContext();\r\n\r\n// Verification thresholds\r\nconst VERIFICATION_THRESHOLDS = {\r\n  safe: 2,        // Need 2 reports to verify safe status\r\n  caution: 3,     // Need 3 reports to verify caution status\r\n  warning: 2,     // Need 2 reports to verify warning status\r\n  unsafe: 1       // Need only 1 report to verify unsafe status (safety first)\r\n};\r\n\r\n// Time window for report verification (in hours)\r\nconst VERIFICATION_WINDOW = 24;\r\n\r\nconst initialState = {\r\n  reports: [],\r\n  verifiedStatuses: {\r\n    \"Lake Anna\": \"warning\",\r\n    \"Occoquan Reservoir\": \"caution\", \r\n    \"Chickahominy River\": \"caution\",\r\n    \"James River\": \"safe\",\r\n    \"Potomac River\": \"safe\",\r\n    \"Shenandoah River\": \"safe\",\r\n    \"Smith Mountain Lake\": \"caution\",\r\n    \"Kerr Reservoir\": \"safe\",\r\n    \"Claytor Lake\": \"safe\",\r\n    \"Lake Gaston\": \"warning\"\r\n  },\r\n  pendingReports: [], // Reports waiting for verification\r\n  verificationQueue: {} // Location-based report queues\r\n};\r\n\r\nconst reportReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_REPORT':\r\n      const newReport = {\r\n        ...action.payload,\r\n        id: Date.now(),\r\n        timestamp: new Date().toISOString(),\r\n        verified: false\r\n      };\r\n\r\n      // Add to pending reports\r\n      const updatedPendingReports = [...state.pendingReports, newReport];\r\n      \r\n      // Update verification queue for this location\r\n      const location = newReport.location;\r\n      const locationReports = state.verificationQueue[location] || [];\r\n      const updatedLocationReports = [...locationReports, newReport];\r\n      \r\n      // Check if we have enough reports to verify\r\n      const threshold = VERIFICATION_THRESHOLDS[newReport.status] || 3;\r\n      const recentReports = updatedLocationReports.filter(report => {\r\n        const reportTime = new Date(report.timestamp);\r\n        const now = new Date();\r\n        const hoursDiff = (now - reportTime) / (1000 * 60 * 60);\r\n        return hoursDiff <= VERIFICATION_WINDOW;\r\n      });\r\n\r\n      const statusCounts = recentReports.reduce((acc, report) => {\r\n        acc[report.status] = (acc[report.status] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n\r\n      // Find the status with the most reports\r\n      const verifiedStatus = Object.keys(statusCounts).reduce((a, b) => \r\n        statusCounts[a] > statusCounts[b] ? a : b\r\n      );\r\n\r\n      // Check if we have enough reports to verify\r\n      const shouldVerify = statusCounts[verifiedStatus] >= threshold;\r\n\r\n      return {\r\n        ...state,\r\n        reports: [newReport, ...state.reports.slice(0, 9)], // Keep 10 most recent\r\n        pendingReports: updatedPendingReports,\r\n        verificationQueue: {\r\n          ...state.verificationQueue,\r\n          [location]: updatedLocationReports\r\n        },\r\n        verifiedStatuses: shouldVerify ? {\r\n          ...state.verifiedStatuses,\r\n          [location]: verifiedStatus\r\n        } : state.verifiedStatuses\r\n      };\r\n\r\n    case 'CLEAR_OLD_REPORTS':\r\n      const cutoffTime = new Date(Date.now() - VERIFICATION_WINDOW * 60 * 60 * 1000);\r\n      \r\n      const filteredPendingReports = state.pendingReports.filter(\r\n        report => new Date(report.timestamp) > cutoffTime\r\n      );\r\n\r\n      const filteredVerificationQueue = Object.keys(state.verificationQueue).reduce((acc, location) => {\r\n        acc[location] = state.verificationQueue[location].filter(\r\n          report => new Date(report.timestamp) > cutoffTime\r\n        );\r\n        return acc;\r\n      }, {});\r\n\r\n      return {\r\n        ...state,\r\n        pendingReports: filteredPendingReports,\r\n        verificationQueue: filteredVerificationQueue\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const ReportProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reportReducer, initialState);\r\n\r\n  // Clean up old reports every hour\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      dispatch({ type: 'CLEAR_OLD_REPORTS' });\r\n    }, 60 * 60 * 1000); // 1 hour\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const addReport = (reportData) => {\r\n    dispatch({\r\n      type: 'ADD_REPORT',\r\n      payload: reportData\r\n    });\r\n  };\r\n\r\n  const getVerificationStatus = (location) => {\r\n    const locationReports = state.verificationQueue[location] || [];\r\n    const recentReports = locationReports.filter(report => {\r\n      const reportTime = new Date(report.timestamp);\r\n      const now = new Date();\r\n      const hoursDiff = (now - reportTime) / (1000 * 60 * 60);\r\n      return hoursDiff <= VERIFICATION_WINDOW;\r\n    });\r\n\r\n    const statusCounts = recentReports.reduce((acc, report) => {\r\n      acc[report.status] = (acc[report.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    const totalReports = Object.values(statusCounts).reduce((sum, count) => sum + count, 0);\r\n    const mostCommonStatus = Object.keys(statusCounts).reduce((a, b) => \r\n      statusCounts[a] > statusCounts[b] ? a : b, 'safe'\r\n    );\r\n\r\n    const threshold = VERIFICATION_THRESHOLDS[mostCommonStatus] || 3;\r\n    const isVerified = statusCounts[mostCommonStatus] >= threshold;\r\n\r\n    return {\r\n      totalReports,\r\n      neededReports: threshold,\r\n      mostCommonStatus,\r\n      isVerified,\r\n      statusCounts\r\n    };\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    addReport,\r\n    getVerificationStatus,\r\n    VERIFICATION_THRESHOLDS\r\n  };\r\n\r\n  return (\r\n    <ReportContext.Provider value={value}>\r\n      {children}\r\n    </ReportContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useReports = () => {\r\n  const context = useContext(ReportContext);\r\n  if (!context) {\r\n    throw new Error('useReports must be used within a ReportProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}